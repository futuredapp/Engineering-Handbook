---
format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
app:
  envs:
  - opts:
      is_expand: false
    FASTLANE_WORK_DIR: "."
  - opts:
      is_expand: true
    BITRISE_DEPLOY_DIR: "/Users/vagrant/git/build_output"
  - SLACK_HOOK_URL: "..."
  - SLACK_CHANNEL: "..."
  - opts:
      is_expand: false
    FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: '1000'
workflows:
  test:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - cache-pull: {}
    - fastlane:
        inputs:
        - lane: test
        - work_dir: "$FASTLANE_WORK_DIR"
    - slack:
        run_if: ".IsBuildFailed"
        is_always_run: false
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "$SLACK_CHANNEL"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - emoji_on_error: 
        - emoji: 
        - message: "*Build success* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username_on_error: Bitrise
        - message_on_error: "*Build failed* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username: Bitrise
    before_run: 
    after_run: 
  enterprise:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - script:
        title: Set GEM_CACHE_PATH env var for caching
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            RBENV_DIR="`cd $(rbenv which ruby)/../..;pwd`"
            echo "Gem cache directory: $RBENV_DIR"
            envman add --key GEM_CACHE_PATH --value $RBENV_DIR
    - git-clone: {}
    - cache-pull: {}
    - fastlane:
        inputs:
        - lane: enterprise
        - work_dir: "$FASTLANE_WORK_DIR"
    - deploy-to-bitrise-io:
        inputs:
        - is_enable_public_page: 'false'
        - notify_user_groups: none
    - slack:
        run_if: ".IsBuildFailed"
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "$SLACK_CHANNEL"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - emoji_on_error: 
        - emoji: 
        - message: "*Build success* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username_on_error: Bitrise
        - message_on_error: "*Build failed* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username: Bitrise
    - cache-push:
        inputs:
        - cache_paths: |
            ./Pods -> ./Podfile.lock
            ~/Library/Developer/Xcode/DerivedData
            $GEM_CACHE_PATH
            $BITRISE_CACHE_DIR
    before_run: 
    after_run: 
  release:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - cache-pull: {}
    - fastlane:
        inputs:
        - work_dir: "$FASTLANE_WORK_DIR"
        - lane: beta
    - deploy-to-bitrise-io:
        inputs:
        - is_enable_public_page: 'false'
        - notify_user_groups: none
    - slack:
        run_if: ".IsBuildFailed"
        is_always_run: false
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "$SLACK_CHANNEL"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - emoji_on_error: 
        - emoji: 
        - message: "*Build success* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username_on_error: Bitrise
        - message_on_error: "*Build failed* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username: Bitrise
    before_run: 
    after_run: 
trigger_map:
- push_branch: develop
  workflow: enterprise
- pull_request_target_branch: "*"
  workflow: test
- tag: "*"
  workflow: release
meta:
  bitrise.io:
    machine_type: standard
