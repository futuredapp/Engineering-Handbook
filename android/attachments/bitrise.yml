---
format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
trigger_map:
- push_branch: develop
  workflow: enterprise
- pull_request_source_branch: "*"
  workflow: pr
- tag: "*.*.*"
  workflow: release
workflows:
  enterprise:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - cache-pull: {}
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
        - cache_level: only_deps
    - gradle-unit-test:
        inputs:
        - unit_test_task: "$GRADLE_TEST_TASK"
    - appcenter-app-release:
        inputs:
        - artifact_path: "$BITRISE_APK_PATH"
        - release_notes: "$GIT_CLONE_COMMIT_MESSAGE_SUBJECT $GIT_CLONE_COMMIT_MESSAGE_BODY"
        - distribution_groups: "$APP_CENTER_DISTRIBUTION_GROUPS"
    - cache-push: {}
    - slack:
        run_if: ".IsBuildFailed"
        is_always_run: true
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "$SLACK_CHANNEL"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - emoji_on_error: 
        - emoji: 
        - message: "*Build success* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username_on_error: Bitrise
        - message_on_error: "*Build failed* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username: Bitrise
    before_run: 
    after_run: 
  release:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - cache-pull: {}
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
        - gradle_options: "--stacktrace"
        - apk_file_include_filter: "*.aab"
        - cache_level: only_deps
    - gradle-unit-test:
        inputs:
        - unit_test_task: "$GRADLE_TEST_TASK"
    - deploy-to-bitrise-io:
        is_always_run: false
        inputs:
        - notify_user_groups: none
        - notify_email_list: ''
    - google-play-deploy@1.5.1:
        inputs:
        - package_name: "$PACKAGE_NAME"
        - track: Autodeploy
        - whatsnews_dir: "./whatsnew"
        - service_account_json_key_path: "$BITRISEIO_GOOGLE_PLAY_SERVICE_KEY_URL"
    - slack:
        run_if: ".IsBuildFailed"
        is_always_run: true
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "$SLACK_CHANNEL"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - emoji_on_error: 
        - emoji: 
        - message: "*Build success* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username_on_error: Bitrise
        - message_on_error: "*Build failed* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username: Bitrise
    - cache-push: {}
    before_run: 
    after_run: 
    envs:
    - opts:
        is_expand: false
      GRADLE_TASK: lintCheck bundleProdRelease
  pr:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - cache-pull: {}
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
        - cache_level: only_deps
    - gradle-unit-test:
        inputs:
        - unit_test_task: "$GRADLE_TEST_TASK"
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            echo "source 'https://rubygems.org'; gem 'thefuntasty_danger'; gem 'danger-checkstyle_format'; gem 'danger-android_lint'; gem 'danger-junit'" > Gemfile
            bundle install
            bundle exec danger
        title: Danger
        is_always_run: true
    - slack:
        run_if: ".IsBuildFailed"
        is_always_run: true
        inputs:
        - webhook_url: "$SLACK_HOOK_URL"
        - channel: "$SLACK_CHANNEL"
        - icon_url: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - icon_url_on_error: https://bitrise-public-content-production.s3.amazonaws.com/slack/bitrise-slack-icon-128.png
        - emoji_on_error: 
        - emoji: 
        - message: "*Build success* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username_on_error: Bitrise
        - message_on_error: "*Build failed* [$BITRISE_GIT_BRANCH]\\n$BITRISE_BUILD_URL"
        - from_username: Bitrise
    before_run: 
    after_run: 
app:
  envs:
  - SLACK_CHANNEL: #TODO "#project-android"
    opts:
      is_expand: false
  - GRADLE_TASK: lintCheck assembleDevEnterprise
    opts:
      is_expand: false
  - GRADLE_TEST_TASK: testMockEnterpriseUnitTest
    opts:
      is_expand: false
  - GRADLEW_PATH: "./gradlew"
    opts:
      is_expand: false
  - GRADLE_BUILD_FILE_PATH: build.gradle.kts
    opts:
      is_expand: false
  - opts:
      is_expand: false
    PACKAGE_NAME: #TODO package.name
  - opts:
      is_expand: false
    APPCENTER_NAME: #TODO AppCenter appName
  - opts:
      is_expand: false
    APPCENTER_ORG: futured
  - opts:
      is_expand: false
    APP_CENTER_DISTRIBUTION_GROUPS: Collaborators, #TODO
  - opts:
      is_expand: false
    NOTIFY_TESTERS: 'false'
